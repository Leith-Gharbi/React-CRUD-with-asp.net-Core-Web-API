[{"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\index.js":"1","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\App.js":"2","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\store.js":"4","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\DCandidates.js":"5","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reducers\\index.js":"6","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reducers\\dCandidate.js":"7","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\dCandidate.js":"8","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\api.js":"9","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\DCandidateForm.js":"10","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\useForm.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":574,"mtime":1612112602124,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":309,"mtime":1611792572000,"results":"16","hashOfConfig":"13"},{"size":3020,"mtime":1612113373114,"results":"17","hashOfConfig":"13"},{"size":151,"mtime":1611790072000,"results":"18","hashOfConfig":"13"},{"size":987,"mtime":1612110136889,"results":"19","hashOfConfig":"13"},{"size":1396,"mtime":1612108740573,"results":"20","hashOfConfig":"13"},{"size":423,"mtime":1611789522000,"results":"21","hashOfConfig":"13"},{"size":6208,"mtime":1612113485503,"results":"22","hashOfConfig":"13"},{"size":660,"mtime":1612112218067,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"wnmyav",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\index.js",[],["49","50"],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\App.js",["51"],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\store.js",[],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\DCandidates.js",["52"],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reducers\\index.js",[],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\reducers\\dCandidate.js",["53","54","55"],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\dCandidate.js",[],"C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\actions\\api.js",["56"],"import axios from \"axios\";\r\n\r\nconst baseUrl=\"http://localhost:3588/api/\"\r\n\r\n\r\n\r\nexport default{\r\n\r\ndCandidate(url=baseUrl+'dcandidate/'){\r\n    return{\r\n        fetchAll:()=>axios.get(url),\r\n        fetchById: id => axios.get(url+id),\r\n        create:newRecord => axios.post(url,newRecord),\r\n        update :(id,updateRecord) => axios.put(url+id,updateRecord),\r\n        delete :(id) => axios.delete(url +id)\r\n\r\n    }\r\n}\r\n\r\n}","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\DCandidateForm.js",["57","58","59","60","61","62","63","64","65"],"import {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  TextField,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/dCandidate';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport useForm from './useForm';\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': { margin: theme.spacing(1), minWidth: 230 },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 230,\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\nconst initialFieldValues = {\r\n  fullName: '',\r\n  mobile: '',\r\n  email: '',\r\n  age: '',\r\n  bloodGroup: '',\r\n  address: '',\r\n};\r\nconst DCandidateForm = ({ classes, ...props }) => {\r\n  //toast message\r\n  const { addToast } = useToasts();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if ('fullName' in fieldValues)\r\n      temp.fullName = fieldValues.fullName ? '' : 'this Field is required.';\r\n    if ('mobile' in fieldValues)\r\n      temp.mobile = fieldValues.mobile ? '' : 'this Field is required.';\r\n    if ('bloodGroup' in fieldValues)\r\n      temp.bloodGroup = fieldValues.bloodGroup ? '' : 'this Field is required.';\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handelInputChange,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  // material-ui select\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelwidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelwidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast('Submitted successfully', { appearance: 'success' });\r\n      };\r\n      if (props.currentId == 0)\r\n        props.createDCandidate(values, () => {\r\n          onSuccess();\r\n        });\r\n      else\r\n        props.updateDCondidate(props.currentId, values, () => {\r\n          onSuccess();\r\n        });\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.currentId != 0)\r\n      setValues({\r\n        ...props.dCandidateList.find((x) => x.id == props.currentId),\r\n      });\r\n  }, [props.currentId]);\r\n  return (\r\n    <form noValidate className={classes.root} onSubmit={handelSubmit}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name=\"fullName\"\r\n            variant=\"outlined\"\r\n            label=\"Full Name\"\r\n            values={values.fullName}\r\n            onChange={handelInputChange}\r\n            // error={true}\r\n            // helperText={errors.fullName}\r\n            {...(errors.fullName && {\r\n              error: true,\r\n              helperText: errors.fullName,\r\n            })}\r\n          ></TextField>\r\n          <TextField\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            label=\"Email\"\r\n            values={values.email}\r\n            onChange={handelInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          ></TextField>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n            {...(errors.bloodGroup && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Blood Group</InputLabel>\r\n            <Select\r\n              name=\"bloodGroup\"\r\n              value={values.bloodGroup}\r\n              onChange={handelInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=\"\"> Select Blood Group</MenuItem>\r\n              <MenuItem value=\"A+\"> A +ve</MenuItem>\r\n              <MenuItem value=\"A-\"> A -ve</MenuItem>\r\n              <MenuItem value=\"B+\"> B +ve</MenuItem>\r\n              <MenuItem value=\"B-\"> B -ve</MenuItem>\r\n              <MenuItem value=\"AB+\"> AB +ve</MenuItem>\r\n              <MenuItem value=\"AB-\"> AB -ve</MenuItem>\r\n              <MenuItem value=\"O+\"> O +ve</MenuItem>\r\n              <MenuItem value=\"O-\"> O -ve</MenuItem>\r\n            </Select>\r\n            {errors.bloodGroup && (\r\n              <FormHelperText>{errors.bloodGroup}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name=\"mobile\"\r\n            variant=\"outlined\"\r\n            label=\"Mobile\"\r\n            values={values.mobile}\r\n            onChange={handelInputChange}\r\n            {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n          ></TextField>\r\n          <TextField\r\n            name=\"age\"\r\n            variant=\"outlined\"\r\n            label=\"Age\"\r\n            values={values.age}\r\n            onChange={handelInputChange}\r\n          ></TextField>\r\n          <TextField\r\n            name=\"adress\"\r\n            variant=\"outlined\"\r\n            label=\"Adress\"\r\n            values={values.adress}\r\n            onChange={handelInputChange}\r\n          ></TextField>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.smMargin}\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCondidate: actions.update,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidateForm));\r\n","C:\\Users\\leith\\source\\repos\\WebApi\\react-app\\src\\components\\useForm.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"77","line":41,"column":6,"nodeType":"78","endLine":41,"endColumn":8,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":22,"column":51,"nodeType":"83","messageId":"84","endLine":22,"endColumn":53},{"ruleId":"81","severity":1,"message":"85","line":27,"column":49,"nodeType":"83","messageId":"84","endLine":27,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":7,"column":1,"nodeType":"88","endLine":20,"endColumn":2},{"ruleId":"72","severity":1,"message":"89","line":16,"column":17,"nodeType":"74","messageId":"75","endLine":16,"endColumn":25},{"ruleId":"72","severity":1,"message":"90","line":16,"column":27,"nodeType":"74","messageId":"75","endLine":16,"endColumn":33},{"ruleId":"72","severity":1,"message":"91","line":16,"column":35,"nodeType":"74","messageId":"75","endLine":16,"endColumn":44},{"ruleId":"81","severity":1,"message":"85","line":57,"column":21,"nodeType":"83","messageId":"84","endLine":57,"endColumn":23},{"ruleId":"81","severity":1,"message":"85","line":57,"column":74,"nodeType":"83","messageId":"84","endLine":57,"endColumn":76},{"ruleId":"81","severity":1,"message":"85","line":82,"column":27,"nodeType":"83","messageId":"84","endLine":82,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":94,"column":25,"nodeType":"83","messageId":"84","endLine":94,"endColumn":27},{"ruleId":"81","severity":1,"message":"85","line":96,"column":50,"nodeType":"83","messageId":"84","endLine":96,"endColumn":52},{"ruleId":"76","severity":1,"message":"92","line":98,"column":6,"nodeType":"78","endLine":98,"endColumn":23,"suggestions":"93"},{"ruleId":"72","severity":1,"message":"94","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"91","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["97"],"'act' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","React Hook React.useEffect has missing dependencies: 'props.dCandidateList' and 'setValues'. Either include them or remove the dependency array.",["98"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [props]",{"range":"103","text":"104"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setValues]",{"range":"105","text":"106"},[954,956],"[props]",[2686,2703],"[props.currentId, props.dCandidateList, setValues]"]